#-----------------------------------------------------------------------------
#
# flvw-1.0Config.cmake - CMake configuration file for external projects.
# This file was automatically generated by the cmake macro 
# CREA_INSTALL_LIBRARY_FOR_CMAKE of the package CREA
#
# This file is configured by cmake and used by the
# Useflvw-1.0.cmake module to load the lib settings 
# for an external project.

# Build tree config ?
SET(CILC_BUILD_TREE_CONFIGURATION FALSE)


IF(UNIX)
SET(GOTO_INSTALL_PREFIX /../../..)
ENDIF(UNIX)


# The flvw-1.0 include file *RELATIVE* directories.
SET(CILC_RELATIVE_INCLUDE_PATHS "include/flvw-1.0")
# Compute the prefix for include and library paths
IF(CILC_BUILD_TREE_CONFIGURATION)
  # In build tree 
  # the include paths are relative to the source tree *AND* the binary tree 
  # for generated files 
  SET(CILC_INCLUDE_PATH_PREFIX /playpen/workspace/newuoa/Correspondence_Oct7/Pablo2_Oct7)
  # Build the *ABSOLUTE* directories
  FOREACH(path ${CILC_RELATIVE_INCLUDE_PATHS})
    SET(flvw-1.0_INCLUDE_DIRS
      ${flvw-1.0_INCLUDE_DIRS}
      ${CILC_INCLUDE_PATH_PREFIX}/${path}
      )
  ENDFOREACH(path ${CILC_RELATIVE_INCLUDE_PATHS})
  SET(CILC_INCLUDE_PATH_PREFIX /playpen/workspace/newuoa/Correspondence_Oct7/myBuild)
  # Build the *ABSOLUTE* directories
  FOREACH(path ${CILC_RELATIVE_INCLUDE_PATHS})
    SET(flvw-1.0_INCLUDE_DIRS
      ${flvw-1.0_INCLUDE_DIRS}
      ${CILC_INCLUDE_PATH_PREFIX}/${path}
      )
  ENDFOREACH(path ${CILC_RELATIVE_INCLUDE_PATHS})
ELSE(CILC_BUILD_TREE_CONFIGURATION)
  # In install tree 
  # the include paths are relative to install prefix 
  # On unix , GOTO_INSTALL_PREFIX allows to get back to the 
  # installation prefix from  flvw-1.0_DIR
  SET(CILC_INCLUDE_PATH_PREFIX ${flvw-1.0_DIR}${GOTO_INSTALL_PREFIX})
  # Build the *ABSOLUTE* directories
  FOREACH(path ${CILC_RELATIVE_INCLUDE_PATHS})
    SET(flvw-1.0_INCLUDE_DIRS
      ${flvw-1.0_INCLUDE_DIRS}
      ${CILC_INCLUDE_PATH_PREFIX}/${path}
      )
  ENDFOREACH(path ${CILC_RELATIVE_INCLUDE_PATHS})
ENDIF(CILC_BUILD_TREE_CONFIGURATION)



# Compute the prefix for library paths
IF(CILC_BUILD_TREE_CONFIGURATION)
  # In build tree
  # the library paths are relative to the binary tree 
  SET(CILC_LIBRARY_PATH_PREFIX /playpen/workspace/newuoa/Correspondence_Oct7/myBuild)
ELSE(CILC_BUILD_TREE_CONFIGURATION)
  # In install tree 
  # the library paths are relative to install prefix
  SET(CILC_LIBRARY_PATH_PREFIX ${flvw-1.0_DIR}${GOTO_INSTALL_PREFIX})
ENDIF(CILC_BUILD_TREE_CONFIGURATION)
# The flvw-1.0 library file *RELATIVE* directories.
SET(CILC_RELATIVE_LIBRARY_PATHS "lib64")
# Build the *ABSOLUTE* directories
FOREACH(path ${CILC_RELATIVE_LIBRARY_PATHS})
  SET(flvw-1.0_LIBRARY_DIRS
    ${flvw-1.0_LIBRARY_DIRS}
    ${CILC_LIBRARY_PATH_PREFIX}/${path}
    )
ENDFOREACH(path ${CILC_RELATIVE_LIBRARY_PATHS})

# Set the "prefix path"
SET(flvw-1.0_INSTALL_PREFIX ${CILC_LIBRARY_PATH_PREFIX})

# The C and C++ flags added by flvw-1.0 to the cmake-configured flags.
SET(flvw-1.0_REQUIRED_C_FLAGS "")
SET(flvw-1.0_REQUIRED_CXX_FLAGS "")
SET(flvw-1.0_REQUIRED_LINK_FLAGS "")

# The flvw-1.0 version 
SET(flvw-1.0_MAJOR_VERSION )
SET(flvw-1.0_MINOR_VERSION )
SET(flvw-1.0_BUILD_VERSION )
SET(flvw-1.0_VERSION ..)

# The location of the Useflvw-1.0.cmake file.
SET(flvw-1.0_USE_FILE "${flvw-1.0_DIR}/Useflvw-1.0.cmake")

# The build settings file.
SET(flvw-1.0_BUILD_SETTINGS_FILE 
  "${flvw-1.0_DIR}/flvw-1.0BuildSettings.cmake")

# A list of all libraries for flvw-1.0.  Those listed here should
# automatically pull in their dependencies.
SET(flvw-1.0_LIBRARIES flvw-1.0)

# Messages
IF(CREA_VERBOSE_CMAKE)
  MESSAGE(STATUS "=======================================")
  MESSAGE(STATUS "Looking for flvw-1.0... found:")
  MESSAGE(STATUS "* flvw-1.0_DIR          = ${flvw-1.0_DIR}")
  MESSAGE(STATUS "* flvw-1.0_VERSION      = ${flvw-1.0_VERSION}")
  MESSAGE(STATUS "* flvw-1.0_USE_FILE     = ${flvw-1.0_USE_FILE}")

  MESSAGE(STATUS "* flvw-1.0_INCLUDE_DIRS = ${flvw-1.0_INCLUDE_DIRS}")
  MESSAGE(STATUS "* flvw-1.0_LIBRARY_DIRS = ${flvw-1.0_LIBRARY_DIRS}")
  MESSAGE(STATUS "* flvw-1.0_LIBRARIES    = ${flvw-1.0_LIBRARIES}")
ENDIF(CREA_VERBOSE_CMAKE)

# Does the library has an additional config file (user provided) ?
SET(flvw-1.0_HAS_ADDITIONAL_CONFIG_FILE FALSE)

IF (flvw-1.0_HAS_ADDITIONAL_CONFIG_FILE)
  IF(CREA_VERBOSE_CMAKE)
    MESSAGE(STATUS "Reading flvw-1.0 additional configuration file")
  ENDIF(CREA_VERBOSE_CMAKE)
  # Include it
  INCLUDE(${flvw-1.0_DIR}/Additionalflvw-1.0Config.cmake)
ENDIF (flvw-1.0_HAS_ADDITIONAL_CONFIG_FILE)
